{"version":3,"sources":["./src/app/components/review/item-review/item-review.component.ts","./src/app/components/review/item-review/item-review.component.html","./src/app/graphql.module.ts","./src/app/components/review/list-review/list-review.component.ts","./src/app/components/review/list-review/list-review.component.html","./src/environments/environment.ts","./src/app/components/categoria/create-category/create-category.component.ts","./src/app/components/categoria/create-category/create-category.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/models/user.model.ts","./src/app/components/movie/created-movie/created-movie.component.ts","./src/app/components/movie/created-movie/created-movie.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/categoria/categoria.component.ts","./src/app/components/categoria/categoria.component.html","./src/app/components/register/register.component.ts","./src/app/components/register/register.component.html","./src/app/app.module.ts","./src/app/models/review.model.ts","./src/app/models/category.model.ts","./src/app/components/movie/movie.component.ts","./src/app/components/movie/movie.component.html","./src/app/services/user.service.ts","./src/app/app-routing.module.ts","./src/app/components/review/add-review/add-review.component.ts","./src/app/components/review/add-review/add-review.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { Review, User, Movie, CreateReview } from '../../../models/review.model'\r\n\r\n@Component({\r\n  selector: 'app-item-review',\r\n  templateUrl: './item-review.component.html',\r\n  styleUrls: ['./item-review.component.css']\r\n})\r\nexport class ItemReviewComponent implements OnInit {  \r\n  @Input() dataFromParent:Review = new Review() \r\n  @Output() datoToParentEdit:EventEmitter<any> =  new EventEmitter()\r\n  @Output() datoToParentDelete:EventEmitter<any> =  new EventEmitter()\r\n\r\n  public arrayRatingGiven:Array<number> = [1,2,3,4,5]\r\n  public arrayRatingNone:Array<number> = [1,2,3,4,5]\r\n\r\n  public showButtons:boolean = false\r\n  public currentUser:number = 0\r\n\r\n  constructor() {        \r\n  }\r\n\r\n  ngOnInit(): void {\r\n    let datuser:any\r\n    datuser = localStorage.getItem(\"userLogged\");\r\n    datuser = JSON.parse(datuser)\r\n    if(datuser != null){\r\n      if(this.dataFromParent.user?.id == datuser.id){\r\n        this.showButtons = true\r\n      }\r\n    }    \r\n  }\r\n\r\n  myRating(stars:number = 1){\r\n    this.arrayRatingGiven.length = stars\r\n    return this.arrayRatingGiven\r\n  }\r\n\r\n  myNoneRating(stars:number = 1){   \r\n    let nonestars =  5 - stars\r\n    this.arrayRatingNone.length = nonestars\r\n    return this.arrayRatingNone\r\n  }\r\n\r\n  delete(id:any){\r\n    this.datoToParentDelete.emit(id)\r\n  }\r\n\r\n  edit(id:any){\r\n    this.datoToParentEdit.emit(id)\r\n  }\r\n\r\n}\r\n","<div class=\"card\">\r\n    <div class=\"img-avatar\">\r\n      <svg viewBox=\"0 0 100 100\">\r\n      <path \r\n            d=\"m38.977 59.074c0 2.75-4.125 2.75-4.125 0s4.125-2.75 4.125 0\"></path>\r\n        <path d=\"m60.477 59.074c0 2.75-4.125 2.75-4.125 0s4.125-2.75 4.125 0\"></path>\r\n      <path d=\"m48.203 69.309c1.7344 0 3.1484-1.4141 3.1484-3.1484 0-0.27734-0.22266-0.5-0.5-0.5-0.27734 0-0.5 0.22266-0.5 0.5 0 1.1836-0.96484 2.1484-2.1484 2.1484s-2.1484-0.96484-2.1484-2.1484c0-0.27734-0.22266-0.5-0.5-0.5-0.27734 0-0.5 0.22266-0.5 0.5 0 1.7344 1.4141 3.1484 3.1484 3.1484z\"></path>\r\n      <path d=\"m35.492 24.371c0.42187-0.35156 0.48047-0.98438 0.125-1.4062-0.35156-0.42188-0.98438-0.48438-1.4062-0.125-5.1602 4.3047-16.422 17.078-9.5312 42.562 0.21484 0.79688 0.85547 1.4062 1.6641 1.582 0.15625 0.035156 0.31641 0.050781 0.47266 0.050781 0.62891 0 1.2344-0.27344 1.6445-0.76562 0.82812-0.98828 2.0039-1.5391 2.793-1.8203 0.56641 1.6055 1.4766 3.3594 2.9727 4.9414 2.2852 2.4219 5.4336 3.9453 9.3867 4.5547-3.6055 4.5-3.8047 10.219-3.8086 10.484-0.011719 0.55078 0.42187 1.0078 0.97656 1.0234h0.023438c0.53906 0 0.98437-0.42969 1-0.97266 0-0.054688 0.17187-4.8711 2.9805-8.7773 0.63281 1.2852 1.7266 2.5 3.4141 2.5 1.7109 0 2.7578-1.2695 3.3398-2.6172 2.8867 3.9258 3.0586 8.8359 3.0586 8.8906 0.015625 0.54297 0.46094 0.97266 1 0.97266h0.023438c0.55078-0.015625 0.98828-0.47266 0.97656-1.0234-0.007812-0.26953-0.20703-6.0938-3.9141-10.613 7.0781-1.3086 10.406-5.4219 11.969-8.9766 1.0508 0.98828 2.75 2.1992 4.793 2.1992 0.078126 0 0.15625 0 0.23828-0.003906 0.47266-0.023438 1.5781-0.074219 3.4219-4.4219 1.1172-2.6406 2.1406-6.0117 2.8711-9.4922 4.8281-22.945-4.7852-30.457-9.1445-32.621-12.316-6.1172-22.195-3.6055-28.312-0.42188-0.48828 0.25391-0.67969 0.85938-0.42578 1.3477s0.85938 0.67969 1.3477 0.42578c5.7031-2.9688 14.934-5.3047 26.5 0.4375 7.1875 3.5703 9 11.586 9.2539 17.684 0.49609 11.93-4.2617 23.91-5.7344 25.062h-0.015626c-1.832 0-3.4102-1.5742-4.0352-2.2852 0.28906-0.99609 0.44531-1.8672 0.52734-2.5117 0.62891 0.16797 1.2812 0.27344 1.9727 0.27344 0.55469 0 1-0.44922 1-1 0-0.55078-0.44531-1-1-1-7.3203 0-10.703-13.941-10.734-14.082-0.097656-0.40625-0.4375-0.71094-0.85156-0.76172-0.43359-0.050781-0.82031 0.16406-1.0117 0.53906-1.8984 3.7188-1.4297 6.7539-0.67969 8.668-6.2383-2.2852-8.9766-8.6914-9.0078-8.7617-0.17969-0.43359-0.62891-0.68359-1.1016-0.60156-0.46094 0.082032-0.80469 0.47266-0.82422 0.94141-0.14062 3.3359 0.67188 5.75 1.5 7.3164-8.3125-2.4297-10.105-11.457-10.184-11.875-0.097656-0.51562-0.57422-0.86328-1.0898-0.8125-0.51953 0.054687-0.90625 0.50391-0.89062 1.0234 0.41406 13.465-1.8516 17.766-3.2383 19.133-0.66406 0.65625-1.1992 0.67188-1.2383 0.67188-0.53906-0.050781-1.0156 0.31641-1.0938 0.85156-0.078125 0.54688 0.29688 1.0547 0.84375 1.1328 0.03125 0.003906 0.11328 0.015625 0.23828 0.015625 0.36719 0 1.1016-0.09375 1.9414-0.66406 0.050781 0.38672 0.125 0.81641 0.21875 1.2656-1.0273 0.35156-2.6211 1.0781-3.7812 2.4648-0.015625 0.019532-0.054687 0.066406-0.15625 0.046875-0.039062-0.007812-0.13281-0.039062-0.16406-0.15234-2.1875-8.1094-5.7148-28.309 8.8867-40.496zm12.711 51.828c-1.0039 0-1.5898-1.207-1.8672-2.0117 0.48047 0.023438 0.95703 0.050781 1.4531 0.050781 0.74219 0 1.4453-0.035156 2.1289-0.082031-0.24219 0.83594-0.76172 2.043-1.7148 2.043zm-13.148-30.664c1.9531 3.6211 5.6367 7.9102 12.305 8.6992 0.43359 0.046875 0.83984-0.18359 1.0234-0.57422 0.18359-0.39062 0.089844-0.85938-0.22656-1.1523-0.074219-0.070312-1.2734-1.2227-1.9688-3.6367 2 2.6094 5.3359 5.6836 10.305 6.5664 0.42187 0.070312 0.83594-0.125 1.0469-0.49219 0.21094-0.36719 0.16406-0.82812-0.11719-1.1484-0.023437-0.027344-1.9414-2.2969-1.2891-5.8906 1.2227 3.5508 3.7461 9.2227 7.8945 11.551-0.03125 0.55859-0.14844 1.668-0.55078 3.0156-0.085937 0.13672-0.125 0.28516-0.13672 0.44531-1.3008 3.8906-5.0039 9.3281-15.547 9.3281-5.375 0-9.4414-1.418-12.086-4.2109-3.5664-3.7656-3.332-8.8477-3.332-8.8984v-0.011719c1.5898-2.7227 2.5-7.3203 2.6797-13.59z\"></path>\r\n    </svg>\r\n    </div>\r\n\r\n    <div class=\"card-text\">\r\n      <div class=\"portada\">\r\n      \r\n      </div>\r\n      <div class=\"title-total\">\r\n          <div class=\"rating\">              \r\n            <i *ngFor=\"let x of myRating(dataFromParent.ranking)\" class=\"small material-icons\">star</i>             \r\n            <i *ngFor=\"let x of myNoneRating(dataFromParent.ranking)\" style=\"color: black;\" class=\"small material-icons\">star_border</i>\r\n          </div>\r\n        <div class=\"title\">@GeckoDevelopers</div>\r\n        <h2>{{ (dataFromParent.user != undefined) ? '@'+dataFromParent.user?.username : '' }}</h2>\r\n    \r\n    <div class=\"desc\">\r\n        {{ dataFromParent.comment }}               \r\n    </div>\r\n    <div class=\"actions\">      \r\n      <button (click)=\"delete(dataFromParent.id)\" *ngIf=\"showButtons\">\r\n        <i style=\"color: red;\" class=\"small material-icons\">delete_outline</i>\r\n      </button>\r\n      <button (click)=\"edit(dataFromParent.id)\" style=\"margin-left: 10px;\" *ngIf=\"showButtons\" >\r\n        <i style=\"color: blue;\" class=\"small material-icons\">edit</i>\r\n      </button>\r\n    </div>\r\n    </div>\r\n   \r\n    </div>\r\n           \r\n</div>","import { NgModule } from '@angular/core';\r\nimport { APOLLO_OPTIONS } from 'apollo-angular';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport {\r\n  ApolloClientOptions,\r\n  InMemoryCache,\r\n  ApolloLink,\r\n} from '@apollo/client/core';\r\nimport { HttpLink } from 'apollo-angular/http';\r\nimport { setContext } from '@apollo/client/link/context';\r\n\r\nconst uri = 'https://gecko-reviews-backend.herokuapp.com/graphql/'; // <-- add the URL of the GraphQL server here\r\nexport function createApollo(httpLink: HttpLink): ApolloClientOptions<any> {\r\n  const basic = setContext((operation, context) => ({\r\n    headers: {\r\n      Accept: 'charset=utf-8',\r\n    },\r\n  }));\r\n\r\n  const auth = setContext((operation, context) => {\r\n    const token = localStorage.getItem('token');\r\n\r\n    if (token === null) {\r\n      return {};\r\n    } else {\r\n      return {\r\n        headers: {\r\n          Authorization: `JWT ${token}`,\r\n        },\r\n      };\r\n    }\r\n  });\r\n\r\n  const link = ApolloLink.from([basic, auth, httpLink.create({ uri })]);\r\n  const cache = new InMemoryCache();\r\n\r\n  return {\r\n    link,\r\n    cache,\r\n  };\r\n}\r\n\r\n@NgModule({\r\n  exports: [\r\n    HttpClientModule,\r\n  ],\r\n  providers: [{\r\n    provide: APOLLO_OPTIONS,\r\n    useFactory: createApollo,\r\n    deps: [HttpLink]\r\n  }]\r\n})\r\nexport class GraphQLModule {}","import { Component, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs'\r\nimport { Apollo, QueryRef } from 'apollo-angular';\r\nimport gql from 'graphql-tag';\r\nimport { Router, ActivatedRoute, Params } from \"@angular/router\";\r\nimport { AddReviewComponent } from '../add-review/add-review.component'\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { Review, User, CreateReview, Dialog } from '../../../models/review.model'\r\nimport { Movie } from '../../../models/movie.model'\r\n\r\nconst getReview = gql`\r\n  query {\r\n    reviews {\r\n      id\r\n      comment\r\n      ranking\r\n      createdAt\r\n      updatedAt\r\n      movie{\r\n        id\r\n        pk       \r\n        movieName\r\n        description\r\n        poster\r\n      }\r\n      user{\r\n        id\r\n        username\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nconst createReview = gql`\r\nmutation createReview(\r\n  $comment: String,\r\n  $ranking: Int,\r\n  $movie: Int,\r\n  $user: Int,\r\n) {\r\n\r\n  createReview(input: {\r\n    comment: $comment,\r\n    ranking: $ranking,\r\n    movie: $movie,\r\n    user: $user,\r\n  }) {\r\n    ok\r\n    review {\r\n      id\r\n      comment\r\n      ranking\r\n      createdAt\r\n      updatedAt\r\n      movie {\r\n        id\r\n        movieName\r\n      }\r\n      user{\r\n        id\r\n        username\r\n      }\r\n    }\r\n  }\r\n  \r\n\r\n}\r\n`;\r\n\r\nconst updateReview = gql`\r\nmutation updateReview(\r\n  $comment: String,\r\n  $ranking: Int,\r\n  $movie: Int,\r\n  $user: Int,\r\n  $reviewid: Int,\r\n) {\r\n\r\n  updateReview(id: $reviewid, input: {\r\n    comment: $comment,\r\n    ranking: $ranking,\r\n    movie: $movie,\r\n    user: $user,\r\n  }) {\r\n    ok\r\n    review {\r\n      id\r\n      comment\r\n      ranking\r\n      createdAt\r\n      updatedAt\r\n      movie {\r\n        id\r\n        movieName\r\n      }\r\n      user{\r\n        id\r\n        username\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n`;\r\n\r\nconst categoryQuery = gql`\r\nquery {\r\n  allMovies {\r\n  edges{\r\n    node{\r\n      id,\r\n      pk,\r\n      poster,\r\n      movieName,\r\n      description,     \r\n    }\r\n    }\r\n  }\r\n  }\r\n`;\r\n\r\n@Component({\r\n  selector: 'app-list-review',\r\n  templateUrl: './list-review.component.html',\r\n  styleUrls: ['./list-review.component.css']\r\n})\r\nexport class ListReviewComponent implements OnInit {\r\n  public cargando:boolean = false\r\n  dataSource: Review[] = [new Review()]\r\n  dataSourceActual: Review[] = []\r\n  public querySubscription: Subscription | undefined;\r\n\r\n  public baseDialog:Dialog | undefined\r\n\r\n  public ratingSelected:number = 0\r\n  public commentAdd:string = ''\r\n  public reviewSelected:number = 0\r\n\r\n  public editing:number = 0\r\n  public loading:boolean = true\r\n  public currentMovie:number = 0\r\n  public userId:number | undefined\r\n\r\n  public descriptionMovie:string = ''\r\n  public posterMovie:string = ''\r\n  public movieNameMovie:string = ''\r\n\r\n  //public querySubscription: QueryRef<any> | undefined;\r\n\r\n  constructor(\r\n    private apollo: Apollo,\r\n    private _route:ActivatedRoute,\r\n    private _router:Router,    \r\n    public dialog: MatDialog\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this._route.paramMap.subscribe(params => {\r\n      let theid:any\r\n      theid = params.get('id')?.toString();\r\n      this.currentMovie = parseInt(theid)\r\n\r\n      let datuser:any\r\n      datuser = localStorage.getItem(\"userLogged\");\r\n      datuser = JSON.parse(datuser)\r\n      if(datuser != null){\r\n        this.userId = datuser.id\r\n      }\r\n      \r\n      this.getMovieData()\r\n      this.reloadData()\r\n\r\n    });    \r\n  }\r\n\r\n  getMovieData(){\r\n    this.querySubscription = this.apollo.watchQuery<any>({\r\n      query: categoryQuery,\r\n      fetchPolicy: 'network-only'\r\n    })\r\n      .valueChanges\r\n      .subscribe((response: any) => {\r\n        let mymovies:Movie[]\r\n        mymovies = response.data.allMovies.edges;\r\n        \r\n        mymovies.map( j => {                \r\n          if(j.node.pk == this.currentMovie){\r\n            this.movieNameMovie = j.node.movieName\r\n            this.posterMovie = j.node.poster\r\n            this.descriptionMovie = j.node.description\r\n          }\r\n        })              \r\n      });\r\n  }\r\n\r\n  reloadData(){\r\n    this.querySubscription = this.apollo.watchQuery<any>({\r\n      query: getReview,\r\n      fetchPolicy: 'network-only'\r\n    })\r\n      .valueChanges\r\n      .subscribe(({ data }) => {\r\n        this.dataSource = []\r\n        this.dataSourceActual = []\r\n        this.dataSource = data.reviews;          \r\n\r\n        this.dataSource.map( j => {\r\n          let movieid:any\r\n          movieid = j.movie?.pk          \r\n          if(movieid == this.currentMovie){\r\n            let mydata:any\r\n            mydata = j            \r\n            this.dataSourceActual = [...this.dataSourceActual, mydata]\r\n          }\r\n        })     \r\n        \r\n        console.log('refresh all:',this.dataSource)\r\n        console.log('refresh filter:',this.dataSourceActual)\r\n\r\n        this.loading = false\r\n      });\r\n  }\r\n\r\n  newReview() {\r\n    console.log('el comentario', this.commentAdd)\r\n    if(this.commentAdd.length > 1){\r\n      this.apollo.mutate({\r\n        mutation: createReview,\r\n        variables: {\r\n          comment: this.commentAdd,\r\n          ranking: this.ratingSelected,\r\n          movie: this.currentMovie,\r\n          user: this.userId,\r\n        }\r\n      }).subscribe(data => { \r\n        \r\n        this.reloadData()      \r\n  \r\n        this.editing = 0\r\n        this.ratingSelected = 0\r\n        this.commentAdd = ''\r\n      });\r\n    }\r\n    else{\r\n      console.log('No puede dejar en blanco create')\r\n    }    \r\n  }\r\n  \r\n  modifyReview() {\r\n    console.log('el comentario', this.commentAdd)\r\n  \r\n    if(this.commentAdd.length > 1){\r\n      const reviewToUpdate = gql(`\r\n            mutation updateReview {\r\n              updateReview(id: `+ this.reviewSelected +`, input: {\r\n                comment: \"`+ this.commentAdd +`\",\r\n                ranking: `+ this.ratingSelected +`,\r\n                movie: `+ this.currentMovie +`,\r\n                user: `+ this.userId +`,\r\n              }) {\r\n                ok\r\n                review {\r\n                  id\r\n                  comment\r\n                  ranking\r\n                  movie {\r\n                    id\r\n                    movieName\r\n                  }\r\n                  user{\r\n                    id\r\n                    username\r\n                  }                                 \r\n                }\r\n              }\r\n            }\r\n        `);\r\n\r\n        this.apollo.mutate({\r\n          mutation: reviewToUpdate\r\n        }).subscribe((data) => {          \r\n                    \r\n          this.reloadData()\r\n    \r\n          this.editing = 0\r\n          this.ratingSelected = 0\r\n          this.commentAdd = ''\r\n          this.reviewSelected = 0\r\n        });\r\n    }\r\n    else{\r\n      console.log('No puede dejar en blanco edit')\r\n    }  \r\n  }\r\n\r\n  removeReview() {          \r\n      const reviewToDelete = gql(`\r\n          mutation deleteReview {\r\n            deleteReview(id: `+ this.reviewSelected +`){\r\n              ok\r\n            }\r\n          }\r\n        `);\r\n\r\n        this.apollo.mutate({\r\n          mutation: reviewToDelete\r\n        }).subscribe((data) => {          \r\n                              \r\n          this.reloadData()\r\n    \r\n          this.editing = 0\r\n          this.ratingSelected = 0\r\n          this.commentAdd = ''\r\n          this.reviewSelected = 0\r\n        });      \r\n  }\r\n\r\n  addRating(){\r\n    if(this.ratingSelected < 5){\r\n      this.ratingSelected = this.ratingSelected + 1\r\n    }\r\n  }\r\n\r\n  removeRating(){\r\n    if(this.ratingSelected > 0){\r\n      this.ratingSelected = this.ratingSelected - 1\r\n    }\r\n  }\r\n\r\n  editReview(id:Event){\r\n    const myid = id    \r\n    if(myid){\r\n      this.reviewSelected = parseInt(myid.toString())\r\n      this.editing = 1\r\n\r\n      this.dataSourceActual.map( j => {\r\n        if(j.id?.toString() == this.reviewSelected.toString()){          \r\n          this.commentAdd = j.comment\r\n          this.ratingSelected = j.ranking          \r\n        }\r\n      })\r\n      console.log('editing:', this.reviewSelected)\r\n    }\r\n  }\r\n\r\n  deleteReview(id:Event){\r\n    const myid = id\r\n    if(myid){\r\n      this.reviewSelected = parseInt(myid.toString())\r\n      this.removeReview()      \r\n    }\r\n  }\r\n\r\n  cancelEdit(){\r\n    this.editing = 0\r\n    this.commentAdd = ''\r\n    this.ratingSelected = 0    \r\n  }\r\n\r\n}\r\n","<div style=\"background-color: #2b2e4a; height: 100%;\" *ngIf=\"!loading\">\r\n\r\n    <br><br><br><br><br><br>\r\n    <div class=\"row\" *ngIf=\"!cargando\" style=\"margin-left: 5%; margin-right: 5%;\">\r\n        <div class=\"row\">\r\n            <div id=\"gradient\"></div>\r\n            <div id=\"card\" >\r\n                <img src=\"{{ posterMovie }}\"/>\r\n                <h2><b>{{ movieNameMovie }}</b></h2> \r\n                <p>\r\n                    {{ descriptionMovie }}\r\n                </p>  \r\n                <a class=\"btn-floating halfway-fab waves-effect waves-light lightblue\" [routerLink]=\"['/movies']\" style=\"margin-right: 60px;\">\r\n                    <i class=\"material-icons\">keyboard_backspace</i>\r\n                </a>     \r\n                <!-- <a class=\"btn-floating halfway-fab waves-effect waves-light lightblue\" (click)=\"reloadData()\" >\r\n                    <i class=\"material-icons\">add</i>\r\n                </a>      -->\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <div class=\"col s12 m7\" style=\"margin-top: 100px; margin-left: 5%; margin-right: 5%;\">        \r\n        <div class=\"card horizontal\">\r\n          <div class=\"card-image\">\r\n            <img src=\"https://en.pimg.jp/064/474/251/1/64474251.jpg\" style=\"width: 150px; height: 100%;\">\r\n          </div>\r\n          <div class=\"card-stacked\">            \r\n\r\n            <div class=\"col s12\">\r\n                <div class=\"col s12\">\r\n                    <div class=\"input-field\" style=\"margin-top: 20px; margin-left: 20px; width: 80%;\">\r\n                        <textarea \r\n                            [(ngModel)]=\"commentAdd\" \r\n                            [ngModelOptions]=\"{standalone: true}\" \r\n                            id=\"comment\" type=\"text\"\r\n                            placeholder=\"Agregar comentario...\"\r\n                            class=\"materialize-textarea\"></textarea>\r\n                        <label class=\"active\" for=\"comment\">Comentario</label>\r\n                    </div>\r\n                </div>                            \r\n            </div>\r\n\r\n            <div class=\"col s12\" style=\"margin-top: 5px; margin-left: 20px;\">                \r\n\r\n                <div *ngIf=\"ratingSelected === 0\" class=\"col l4 left\">\r\n                    <i class=\"small material-icons\">star_border</i>\r\n                    <i class=\"small material-icons\">star_border</i>\r\n                    <i class=\"small material-icons\">star_border</i>\r\n                    <i class=\"small material-icons\">star_border</i>\r\n                    <i class=\"small material-icons\">star_border</i>\r\n                </div>\r\n                <div *ngIf=\"ratingSelected === 1\" class=\"col l4 left\">\r\n                    <i style=\"color: yellow;\" class=\"small material-icons\">star</i>\r\n                    <i class=\"small material-icons\">star_border</i>\r\n                    <i class=\"small material-icons\">star_border</i>\r\n                    <i class=\"small material-icons\">star_border</i>\r\n                    <i class=\"small material-icons\">star_border</i>\r\n                </div>\r\n                <div *ngIf=\"ratingSelected === 2\" class=\"col l4 left\">\r\n                    <i style=\"color: yellow;\" class=\"small material-icons\">star</i>\r\n                    <i style=\"color: yellow;\" class=\"small material-icons\">star</i>\r\n                    <i class=\"small material-icons\">star_border</i>\r\n                    <i class=\"small material-icons\">star_border</i>\r\n                    <i class=\"small material-icons\">star_border</i>\r\n                </div>\r\n                <div *ngIf=\"ratingSelected === 3\" class=\"col l4 left\">\r\n                    <i style=\"color: yellow;\" class=\"small material-icons\">star</i>\r\n                    <i style=\"color: yellow;\" class=\"small material-icons\">star</i>\r\n                    <i style=\"color: yellow;\" class=\"small material-icons\">star</i>\r\n                    <i class=\"small material-icons\">star_border</i>\r\n                    <i class=\"small material-icons\">star_border</i>\r\n                </div>\r\n                <div *ngIf=\"ratingSelected === 4\" class=\"col l4 left\">\r\n                    <i style=\"color: yellow;\" class=\"small material-icons\">star</i>\r\n                    <i style=\"color: yellow;\" class=\"small material-icons\">star</i>\r\n                    <i style=\"color: yellow;\" class=\"small material-icons\">star</i>\r\n                    <i style=\"color: yellow;\" class=\"small material-icons\">star</i>\r\n                    <i class=\"small material-icons\">star_border</i>\r\n                </div>\r\n                <div *ngIf=\"ratingSelected === 5\" class=\"col l4 left\">\r\n                    <i style=\"color: yellow;\" class=\"small material-icons\">star</i>\r\n                    <i style=\"color: yellow;\" class=\"small material-icons\">star</i>\r\n                    <i style=\"color: yellow;\" class=\"small material-icons\">star</i>\r\n                    <i style=\"color: yellow;\" class=\"small material-icons\">star</i>\r\n                    <i style=\"color: yellow;\" class=\"small material-icons\">star</i>\r\n                </div>\r\n                        \r\n                <div class=\"col s4 left\" style=\"width: 300px; margin-left: 20px;\">                    \r\n                    <button style=\"background-color: black; border-radius: 20px;\" (click)=\"removeRating()\">\r\n                        <i style=\"color: white; background-color: black; border-radius: 24px;\" class=\"small material-icons\">keyboard_arrow_left</i>\r\n                    </button>\r\n                    <button style=\"background-color: black; margin-right: 5px; border-radius: 20px;\" (click)=\"addRating()\">\r\n                        <i style=\"color: white; background-color: black; border-radius: 24px;\" class=\"small material-icons\">keyboard_arrow_right</i>\r\n                    </button>                    \r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"card-action\">\r\n                <a class=\"btn-floating btn-large waves-effect light-green darken-3\" (click)=\"newReview()\">\r\n                  <i class=\"material-icons\">add</i>\r\n                </a>\r\n                \r\n                <a class=\"btn-floating btn-large waves-effect cyan darken-4\" \r\n                    *ngIf=\"editing == 1\" (click)=\"modifyReview()\">\r\n                    <i class=\"material-icons\">edit</i>\r\n                </a>\r\n\r\n                <a class=\"btn-floating btn-large waves-effect red darken-4\" \r\n                    *ngIf=\"editing == 1\" (click)=\"cancelEdit()\">\r\n                    <i class=\"material-icons\">close</i>\r\n                </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    </div>\r\n             \r\n    \r\n\r\n    <div class=\"row col l12\" style=\"margin-top: 100px; background-color: #2b2e4a; padding-bottom: 2%; margin-left: 65px;  margin-right: 65px;\">\r\n        <div *ngFor=\"let review of dataSourceActual\" >\r\n            <app-item-review \r\n                class=\"col l4 m6 s12\" \r\n                [dataFromParent]=\"review\" \r\n                (datoToParentDelete)=\"deleteReview($event)\" \r\n                (datoToParentEdit)=\"editReview($event)\"\r\n            >\r\n            </app-item-review>            \r\n        </div>        \r\n    </div>        \r\n\r\n</div>\r\n\r\n\r\n<div *ngIf=\"loading\">\r\n    <mat-spinner style=\"color: green;\" ></mat-spinner>\r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Apollo } from 'apollo-angular';\r\nimport { Router, ActivatedRoute, Params } from \"@angular/router\";\r\nimport { Category } from '../../../models/category.model'\r\nimport gql from 'graphql-tag';\r\nimport { Subscription } from 'rxjs'\r\n\r\n@Component({\r\n  selector: 'app-create-category',\r\n  templateUrl: './create-category.component.html',\r\n  styleUrls: ['./create-category.component.css']\r\n})\r\nexport class CreateCategoryComponent implements OnInit {\r\n  loading: boolean = true\r\n  color: any\r\n  name: string | undefined\r\n  fontColor: any = 'white'\r\n  idCategory: any\r\n  category: Category\r\n  title: string = ''\r\n  buttonName: string = ''\r\n  private querySubscription: Subscription | any;\r\n  //ColorPicker \r\n  disabled: boolean = false\r\n  touchUi: boolean = false\r\n  constructor(\r\n    private _route: ActivatedRoute,\r\n    private _router: Router,\r\n    private apollo: Apollo,\r\n  ) {\r\n    this.category = new Category()\r\n  }\r\n\r\n\r\n  clickButton() {\r\n    console.log(this.color)\r\n    //this.category.color = this.color.hex\r\n    let sendCategory\r\n    if (this.idCategory == 0) {\r\n      sendCategory = gql(`\r\n        mutation {\r\n          createCategory(input: {\r\n            name: \"`+ this.name + `\",\r\n            color:\"#`+ this.color.hex + `\"\r\n          }) {\r\n            ok\r\n            category {\r\n              id\r\n              name\r\n              color\r\n            }\r\n          }\r\n        } \r\n        `);\r\n    } else {\r\n      sendCategory = gql(`  \r\n        mutation {\r\n          updateCategory(id:`+ this.idCategory + `,input: {\r\n            name: \"`+ this.name + `\",\r\n            color:\"#`+ this.color.hex + `\"\r\n          }) {\r\n            ok\r\n            category {\r\n              id\r\n              name\r\n              color\r\n            }\r\n          }\r\n        }    \r\n        `);\r\n    }\r\n    console.log(sendCategory)\r\n    this.apollo.mutate({\r\n      mutation: sendCategory\r\n    }).subscribe(() => {\r\n      this._router.navigate(['/category'])\r\n      window.open('/category', '_self')\r\n    });\r\n  }\r\n\r\n  onChangeColor() {\r\n    if (Number(this.color.hex[0]) <= 7)\r\n      this.fontColor = 'white'\r\n    else\r\n      this.fontColor = 'black'\r\n  }\r\n\r\n\r\n\r\n  ngOnInit(): void {\r\n    this._route.paramMap.subscribe(params => {\r\n      this.idCategory = Number(params.get('id'))\r\n    });\r\n    if (this.idCategory == 0) {\r\n      this.title = \"Crear categoría\"\r\n      this.buttonName = \"Agregar\"\r\n      this.category.name = \"\"\r\n      this.color = ''\r\n      this.loading = false\r\n    }\r\n    else {\r\n      this.title = \"Modificar categoría\"\r\n      this.buttonName = \"Modificar\"\r\n      const getCategory = gql(`\r\n        query {\r\n          category(id:`+ this.idCategory + `) {\r\n            id\r\n            name\r\n            color\r\n            createdAt\r\n          }\r\n        }\r\n      `);\r\n      this.querySubscription = this.apollo.watchQuery<any>({\r\n        query: getCategory\r\n      })\r\n        .valueChanges\r\n        .subscribe(({ data }) => {\r\n          this.category = data.category;\r\n          this.color = this.category.color\r\n          this.name = this.category.name\r\n          this.loading = false\r\n        });\r\n    }\r\n  }\r\n\r\n}\r\n","<br>\r\n<br>\r\n<br>\r\n<br>\r\n<br>\r\n<br>\r\n<div class=\"row\" *ngIf=\"loading\">\r\n    <div class=\"col s12 center\">\r\n        <mat-spinner style=\"margin-left: 47%;\"></mat-spinner>\r\n    </div>\r\n</div>\r\n<div class=\"container\" *ngIf=\"!loading\">\r\n    <div class=\"row center\">\r\n        <div class=\"col s12 m8 offset-m2\">\r\n            <mat-card>\r\n                <mat-card-title>{{title}}</mat-card-title>\r\n                <br>\r\n                <mat-card-content>\r\n                    <div class=\"row\">\r\n                        <div class=\"col s6\">\r\n                            <div class=\"row\">\r\n                                <div class=\"input-field col s12\">\r\n                                    <input [(ngModel)]=\"name\" style=\"color: white;\" placeholder=\"Nombre de la categoría\"\r\n                                        type=\"text\" class=\"validate\" required=\"\" aria-required=\"true\">\r\n                                    <label class=\"active\">Nombre</label>\r\n                                    <span class=\"helper-text\" data-error=\"Este campo es obligario\"\r\n                                        data-success=\"\"></span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col s6\">\r\n                            <mat-form-field>\r\n                                <input matInput [ngxMatColorPicker]=\"picker\" [disabled]=\"disabled\" [(ngModel)]=\"color\"\r\n                                    placeholder=\"Seleccione un color\" (ngModelChange)=\"onChangeColor()\">\r\n                                <ngx-mat-color-toggle matSuffix [for]=\"picker\"></ngx-mat-color-toggle>\r\n                                <ngx-mat-color-picker #picker [touchUi]=\"touchUi\" [color]=\"color\">\r\n                                </ngx-mat-color-picker>\r\n                            </mat-form-field>\r\n\r\n                        </div>\r\n                        <div class=\"col s12\">\r\n                            <mat-card style=\"background-color: {{color}};\"></mat-card>\r\n                        </div>\r\n\r\n                        <div class=\"col s12\">\r\n                            <br><br>\r\n                            <button mat-raised-button color=\"accent\" (click)=\"clickButton()\">{{buttonName}}</button>\r\n                        </div>\r\n\r\n                    </div>\r\n                </mat-card-content>\r\n            </mat-card>\r\n        </div>\r\n    </div>\r\n\r\n</div>","import { flatten } from \"@angular/compiler\";\r\nimport { Component, DoCheck } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Apollo } from \"apollo-angular\";\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements DoCheck {\r\n  title = 'movies';\r\n  loggedButtons=false;  \r\n  isAdmin=false;\r\n\r\n  constructor(\r\n    private _router: Router,\r\n    private apollo: Apollo,\r\n  ){\r\n    \r\n  }\r\n\r\n  \r\n  ngDoCheck() {    \r\n    let identity:any\r\n    identity = localStorage.getItem('userLogged')       \r\n    if(identity===null){\r\n      this.loggedButtons=false\r\n    }else{\r\n      this.loggedButtons=true\r\n      identity=JSON.parse(identity)      \r\n      if(identity.isStaff){\r\n        console.log(\"es admin el perro\")\r\n        this.isAdmin=true\r\n      }else{\r\n        this.isAdmin=false\r\n        console.log(\"no es admin wacala\")        \r\n      }\r\n    }\r\n  }\r\n\r\n  logOut(){\r\n    this.apollo.getClient().resetStore();\r\n    localStorage.removeItem('userLogged')\r\n    localStorage.removeItem('token')\r\n    this._router.navigate(['/login'])\r\n  }\r\n}\r\n\r\n\r\n","<nav style=\"position: fixed; z-index: 99; height: 100px;\" >\r\n  \r\n  <div class=\"nav-wrapper\" style=\"background:#903749; \">\r\n    <img class=\"brand-logo right\"  src=\"../assets/hiclipart.com.png\" alt=\"\" style=\"height: 100%; width: 5%;\">                                          \r\n    <div class=\"brand-logo center\">\r\n      <a [routerLink]=\"['/']\">\r\n      <span style=\"margin-right: 10px !important;\"  >Gecko </span>\r\n      <img class=\"brand-logo center\"  src=\"https://images-ext-2.discordapp.net/external/T0kq3ZaGUVOhp8ifQK2E1Tt0aevIasLV8RgshxREP2g/https/image.flaticon.com/icons/png/512/616/616488.png\" alt=\"\" style=\"height: 100px; width: 35%;\">                                          \r\n      <span style=\"margin-left: 95px;\">Reviews</span>\r\n    </a>\r\n    </div>\r\n    \r\n    <ul id=\"nav-mobile\" >\r\n      <li *ngIf=\"!loggedButtons\"><a  style=\"height: 100px; padding: 15px; font-size: large;\" [routerLink]=\"['/login']\" routerLinkActive=\"router-link-active\" >Iniciar Sesión </a> </li>      \r\n      <li *ngIf=\"loggedButtons\"><a  style=\"height: 100px; padding: 15px; font-size: large;\" (click)=\"logOut()\" routerLinkActive=\"router-link-active\" > <mat-icon style=\"margin-top:18px; font-size: 35px;\">exit_to_app</mat-icon></a></li>      \r\n      <li *ngIf=\"loggedButtons && isAdmin\"><a  style=\"height: 100px; padding: 15px; font-size: large;\" [routerLink]=\"['/category']\" routerLinkActive=\"router-link-active\" > Categorias</a></li>\r\n    </ul>\r\n  </div>\r\n</nav>\r\n      \r\n\r\n\r\n<router-outlet></router-outlet>","export class User {\r\n  userId: number | undefined;\r\n  username: string | undefined;\r\n  name: string | undefined;\r\n  surname: string | undefined;\r\n  password: string | undefined;\r\n  role: number | undefined;\r\n  createdAt: string | undefined;\r\n  updatedAt: string | undefined;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Subscription } from 'rxjs'\r\nimport { Apollo } from 'apollo-angular';\r\nimport gql from 'graphql-tag';\r\nimport { Category } from '../../../models/category.model'\r\nimport { Router, ActivatedRoute, Params } from \"@angular/router\";\r\n\r\nconst categoryQuery = gql`\r\n  query {\r\n    categories {\r\n      id\r\n      name\r\n      color\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\nconst createMovie = gql`\r\n      mutation createMovie($poster: String!, $movieName: String!, $description:String!, $category:Int!)\r\n      {\r\n      createMovie(poster: $poster, movieName: $movieName, description: $description, category: $category)\r\n      {\r\n      movie{\r\n      poster,\r\n      movieName,\r\n      description\r\n      }\r\n      }\r\n      }`;\r\n\r\n\r\n\r\n\r\nconst movieQuery = gql`\r\nquery {\r\n  allMovies {\r\n  edges{\r\n    node{\r\n      id,\r\n      pk,\r\n      poster,\r\n      movieName,\r\n      description,\r\n      category{\r\n        id,\r\n        name,\r\n        color,\r\n        createdAt,\r\n        updatedAt\r\n      },\r\n      createdAt,\r\n      updatedAt\r\n    }\r\n    }\r\n  }\r\n  }\r\n`;\r\n\r\n@Component({\r\n  selector: 'app-created-movie',\r\n  templateUrl: './created-movie.component.html',\r\n  styleUrls: ['./created-movie.component.css']\r\n})\r\nexport class CreatedMovieComponent implements OnInit {\r\n  public nombre: string\r\n  public descripcion: string\r\n  public poster: string\r\n  public categoria: string\r\n  public idactualizar: string\r\n  dataSource: any\r\n  validarForm: FormGroup;\r\n  nombreFormControl = new FormControl()\r\n  descripcionFormControl = new FormControl()\r\n  posterFormControl = new FormControl()\r\n  categoriaFormControl = new FormControl()\r\n\r\n  private querySubscription: Subscription | undefined;\r\n  listCategory = new Array<Category>();\r\n  selectCategory: string\r\n  constructor(private apollo: Apollo, private formBuilder: FormBuilder,\r\n    private _router: Router,\r\n    private _route: ActivatedRoute\r\n  ) {\r\n    this.selectCategory = '',\r\n      this.validarForm = this.formBuilder.group({\r\n        nombre: this.nombreFormControl,\r\n        descripcion: this.descripcionFormControl,\r\n        poster: this.posterFormControl,\r\n        categoria: this.categoriaFormControl\r\n      }),\r\n      this.nombre = ''\r\n    this.descripcion = ''\r\n    this.poster = ''\r\n    this.categoria = ''\r\n    this.dataSource = []\r\n    this.idactualizar = ''\r\n  }\r\n  crear() {\r\n    if (this.idactualizar === '0') {\r\n      this.apollo\r\n        .mutate({\r\n          mutation: createMovie,\r\n          variables: {\r\n            movieName: this.nombreFormControl.value,\r\n            description: this.descripcionFormControl.value,\r\n            poster: this.posterFormControl.value,\r\n            category: this.categoriaFormControl.value\r\n          }\r\n        })\r\n        .subscribe(() => {\r\n          this._router.navigate(['/movies'])\r\n          window.open('/movies','_self')\r\n        }\r\n        );\r\n    }\r\n    else {\r\n      const updateMovie = gql(`\r\n      mutation updateMovie\r\n      {\r\n      updateMovie(id:\"`+ this.idactualizar + `\", poster:\"` + this.posterFormControl.value + `\" , movieName:\"` + this.nombreFormControl.value + `\" , description: \"` + this.descripcionFormControl.value + `\", category:  \"` + this.categoriaFormControl.value + `\" )\r\n      {\r\n        movie{\r\n          id,\r\n          poster,\r\n          movieName,\r\n          description,\r\n          category{\r\n            id,\r\n            name,\r\n            color\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `);\r\n      this.apollo\r\n        .mutate({\r\n          mutation: updateMovie,\r\n          variables: {\r\n            id: this.nombreFormControl.value,\r\n            description: this.descripcionFormControl.value,\r\n            poster: this.posterFormControl.value,\r\n            category: this.categoriaFormControl.value\r\n          }\r\n        })\r\n        .subscribe(() => {\r\n          this._router.navigate(['/movies'])\r\n          window.open('/movies','_self')\r\n        }\r\n        );\r\n    }\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n  getMovie(id: string) {\r\n    console.log(id)\r\n    this.idactualizar = id\r\n    this.querySubscription = this.apollo.watchQuery<any>({\r\n      query: movieQuery\r\n    })\r\n      .valueChanges\r\n      .subscribe((response) => {\r\n        this.dataSource = response.data.allMovies.edges;\r\n        this.dataSource.map((d: any) => {\r\n          console.log(d)\r\n          if (d.node.pk == id) {\r\n            this.nombreFormControl.setValue(d.node.movieName)\r\n            this.descripcionFormControl.setValue(d.node.description)\r\n            this.posterFormControl.setValue(d.node.poster)\r\n            this.categoriaFormControl.setValue(d.node.category.id)\r\n            this.idactualizar = d.node.pk\r\n          }\r\n        })\r\n      });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this._route.paramMap.subscribe((params) => {\r\n      const id = params.get(\"id\")!;\r\n      this.getMovie(id)\r\n    })\r\n\r\n\r\n    this.querySubscription = this.apollo.watchQuery<any>({\r\n      query: categoryQuery\r\n    })\r\n      .valueChanges\r\n      .subscribe(({ data }) => {\r\n        console.log(data.categories)\r\n        this.listCategory = data.categories\r\n      });\r\n\r\n\r\n\r\n\r\n  }\r\n}\r\n","<br />\r\n<br />\r\n<br />\r\n<br />\r\n<br />\r\n<div style=\"background-color: #2b2e4a; height: 100%\">\r\n  <div class=\"container center-align\">\r\n    <br />\r\n    <div class=\"row outsidecont\" style=\"background-color: #53354a\">\r\n      <br />\r\n      <br />\r\n      <div class=\"input-field col s1\"></div>\r\n      <div class=\"col s10 white insidecont\">\r\n        <br />\r\n        <br />\r\n        <div class=\"row\">\r\n          <div class=\"row margin\">\r\n            <div class=\"col s12 m12 l12 center\">\r\n              <img\r\n                src=\"../../assets/register.svg\"\r\n                alt=\"\"              \r\n                style=\"width: 20%\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <h1 style=\"font-size: 35px\">Registro de Pelicula</h1>\r\n          <form [formGroup]=\"validarForm\">\r\n             \r\n          <div class=\"row\">\r\n            <div class=\"input-field col s5 offset-s1\">\r\n              <input\r\n                id=\"nombre\"\r\n                name=\"nombre\"\r\n                type=\"text\"\r\n                required\r\n                formControlName=\"nombre\"\r\n                placeholder=\"Nombre\"\r\n              />\r\n              <label class=\"active\" for=\"nombre\">Nombre</label>\r\n            </div>\r\n            <div class=\"input-field col s5\">\r\n              <input\r\n                id=\"descripcion\"\r\n                type=\"text\"\r\n                class=\"validate\"\r\n                required\r\n                formControlName=\"descripcion\"\r\n                placeholder=\"Descripcion\"\r\n              />\r\n              <label class=\"active\" for=\"descripcion\">Descripcion</label>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"input-field col s5 offset-s1\">\r\n              <input\r\n                id=\"nombreUsuario\"\r\n                name=\"nombre\"\r\n                type=\"text\"\r\n                class=\"validate\"\r\n                required\r\n                formControlName=\"poster\"\r\n                placeholder=\"Portada\"\r\n              />\r\n              <label class=\"active\" for=\"nombreUsuario\">Portada</label>\r\n            </div>          \r\n            <div class=\"input-field col s5 \">\r\n                <mat-form-field class=\"example-full-width\" style=\"width: 80%; background-color: #424242;\">\r\n                    <mat-label style=\"color:#ffffff\">Seleccionar</mat-label>\r\n                    <mat-select  matTooltip=\"Seleccione una categoria\" class='validate'\r\n                        name='category_id' formControlName=\"categoria\">\r\n                        <mat-option *ngFor=\"let category of listCategory\" [value]=\"category.id\">\r\n                            {{category.name}}\r\n                        </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint style=\"color:#ffffff\" align=\"end\">categoria</mat-hint>\r\n                </mat-form-field>\r\n              </div>\r\n        </div>\r\n        </form>\r\n      \r\n        <div class=\"input-field col\"></div>\r\n        <img height=\"400px\" width=\"auto\" src={{posterFormControl.value}}>\r\n        <br>\r\n        <button\r\n        class=\"btn-large waves-effect\"\r\n        style=\"background-color: #e84545;\"            \r\n        type=\"submit\"\r\n        name=\"action\"\r\n        (click)=\"crear()\"\r\n      >\r\n        AGREGAR\r\n        <i class=\"material-icons right\">add</i>\r\n      </button>  \r\n      </div>                 \r\n    </div>  \r\n    <div class=\"row\">\r\n      <br>            \r\n    </div>  \r\n    <div class=\"row\">\r\n      <br>            \r\n    </div>     \r\n  </div>    \r\n</div>\r\n","import { Route } from '@angular/compiler/src/core';\r\nimport { Component, OnInit, DoCheck } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { from } from 'rxjs';\r\nimport { Subscription } from 'rxjs'\r\nimport { Apollo } from 'apollo-angular';\r\nimport gql from 'graphql-tag';\r\nimport { User } from 'src/app/models/user.model';\r\nimport { UserService} from '../../services/user.service'\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n\r\n\r\nconst USER_LOGIN = gql`\r\n  mutation TokenAuth($username: String!, $password: String!) {\r\n    tokenAuth(username: $username, password: $password ) {\r\n      token\r\n    }\r\n  }\r\n`;\r\n\r\nconst GET_USER_DATA= gql`\r\nquery{\r\n  me{\r\n    id\r\n    username,\r\n    lastName,\r\n    email,\r\n    isStaff\r\n  }\r\n}\r\n`;\r\n\r\ninterface tokenAuth  {\r\n  token: string\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css'],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  \r\n  public cargando: boolean | undefined;\r\n  public status: string | undefined;\r\n  public identity: string | undefined;\r\n  public user: User = new User();\r\n  public token:string | undefined;\r\n  public firstFormGroup: FormGroup | undefined;\r\n  private querySubscription: Subscription | undefined\r\n\r\n  constructor(\r\n    private _userService: UserService,\r\n    private apollo: Apollo,\r\n    private _route: ActivatedRoute,    \r\n    private _router: Router,\r\n  ) {\r\n    this.user = new User();    \r\n    this.cargando=false\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.user=new User();\r\n  }\r\n\r\n  LogIn() {\r\n    console.log(this.user)\r\n    this.cargando=true;\r\n    this.apollo.mutate({\r\n      mutation: USER_LOGIN,\r\n      variables: {\r\n        username: this.user.username,\r\n        password: this.user.password\r\n      }\r\n    }).subscribe((response:any) => {      \r\n      console.log('got data', response);\r\n      let token=response.data.tokenAuth.token;\r\n      localStorage.setItem(\"token\", token);\r\n      this.getUserData(token)      \r\n\r\n    },(error) => {\r\n      console.log('there was an error sending the query', error);\r\n      this.cargando=false\r\n      this.status=\"error\"\r\n      \r\n    });\r\n  \r\n  }\r\n\r\n  getUserData(_token: string){\r\n    this.querySubscription = this.apollo.watchQuery<any>({\r\n      query: GET_USER_DATA\r\n    })\r\n      .valueChanges\r\n      .subscribe(( response:any ) => {\r\n        console.log(response)\r\n        var user=response.data.me\r\n        localStorage.setItem(\"userLogged\", JSON.stringify(user));\r\n        this.cargando=false                \r\n        this.status=\"success\"\r\n        this._router.navigate([\"/movies\"]);   \r\n      },(error)=>{\r\n        console.log(error)\r\n        \r\n      });\r\n  }\r\n}\r\n","<br>\r\n<br>\r\n<br>\r\n<br>\r\n<br>\r\n<div style=\"background-color: #2b2e4a; height: 100%;\">  \r\n    <div class=\"container center-align\">  \r\n      <br />\r\n      <div class=\"row outsidecont\" style=\"background-color: #53354a;\">\r\n        <br />\r\n        <br />    \r\n        <div class=\"input-field col s1\"></div>\r\n        <div class=\"col s10 white insidecont\">\r\n          <br />\r\n          <br />                \r\n            <div class=\"row\">\r\n              <div class=\"row margin\">\r\n                <div class=\"col s12 m12 l12 center\">\r\n                    <img src=\"../../assets/login.svg\"\r\n                    alt=\"\" class=\"circle\" style=\"width:40%;\">                \r\n                </div>\r\n            </div>          \r\n              <h1 style=\"font-size: 35px\">Inicio de sesión</h1>        \r\n              <div class=\"input-field col s8 offset-s2\">\r\n                <input\r\n                  id=\"nombreUsuario\"\r\n                  name=\"nombre\"\r\n                  type=\"text\"\r\n                  class=\"validate\"\r\n                  required                                    \r\n                  pattern=\"[a-zA-Z]{5,12}\"\r\n                  [(ngModel)]=\"user.username\"                  \r\n                />\r\n                <label for=\"nombreUsuario\">Nombre de Usuario</label>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"input-field col s8 offset-s2\">\r\n                <input\r\n                  id=\"password\"\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  [(ngModel)]=\"user.password\"                          \r\n                  autocomplete=\"on\"              \r\n                  required\r\n                />\r\n                <label for=\"password\">Contraseña</label>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\" *ngIf=\"cargando\">\r\n              <div class=\"col s12 center\">\r\n                <mat-spinner style=\"margin:0 auto;\"></mat-spinner>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\"  *ngIf=\"!cargando\">\r\n              <div class=\"col s12\">\r\n                <div class=\"alert alert-success\" *ngIf=\"status == 'success'\">\r\n                  <h1>Ha iniciado sesión correctamente</h1>\r\n                  <a [routerLink]=\"['/inicio']\">Ingresa aquí</a>\r\n                </div>\r\n                <div class=\"alert alert-danger\" *ngIf=\"status == 'error'\">\r\n                  <h1 style=\"color: red;\">Intentalo de nuevo, nombre de usuario o contraseña incorrectos</h1>\r\n                </div>\r\n                <button\r\n                  class=\"btn-large waves-effect\"\r\n                  style=\"background-color: #e84545;\"            \r\n                  type=\"submit\"\r\n                  name=\"action\"\r\n                  (click)=\"LogIn()\"\r\n                >\r\n                  Ingresar\r\n                  <i class=\"material-icons right\">send</i>\r\n                </button>     \r\n                <br>\r\n                <br>\r\n                <div class=\"row center\">\r\n                  <span>¿No tienes una cuenta?</span><a [routerLink]=\"['/register']\" routerLinkActive=\"router-link-active\" > Registrate aquí</a>\r\n                </div>                   \r\n              </div>                  \r\n            </div>          \r\n          <div class=\"input-field col s1\"></div>\r\n        </div>\r\n        <div class=\"row\"></div>\r\n        <br />    \r\n      </div>\r\n    </div>\r\n    </div>\r\n    \r\n    ","import { Component, OnInit } from '@angular/core';\r\nimport { from } from 'rxjs';\r\nimport { Subscription } from 'rxjs'\r\nimport { Apollo } from 'apollo-angular';\r\nimport gql from 'graphql-tag';\r\nimport { Category } from '../../models/category.model'\r\n\r\nconst categoryQuery = gql`\r\n query {\r\n  categories {\r\n    id\r\n    name\r\n    color\r\n    createdAt\r\n  }\r\n}\r\n`;\r\n\r\n@Component({\r\n  selector: 'app-categoria',\r\n  templateUrl: './categoria.component.html',\r\n  styleUrls: ['./categoria.component.css']\r\n})\r\nexport class CategoriaComponent implements OnInit {\r\n  loading: boolean = true\r\n  dataSource: Category[] = []\r\n  private querySubscription: Subscription | undefined;\r\n  displayedColumns: string[] = ['name', 'color', 'options'];\r\n\r\n  constructor(private apollo: Apollo) { }\r\n\r\n  ngOnInit(): void {\r\n    this.querySubscription = this.apollo.watchQuery<any>({\r\n      query: categoryQuery\r\n    })\r\n      .valueChanges\r\n      .subscribe(({ data }) => {\r\n        this.dataSource = data.categories;\r\n        this.loading = false\r\n      });\r\n  }\r\n\r\n}\r\n","<br>\r\n<br>\r\n<br>\r\n<br>\r\n<br>\r\n<br>\r\n<div class=\"row\" *ngIf=\"loading\">\r\n    <div class=\"col s12 center\">\r\n        <mat-spinner style=\"margin-left: 47%;\"></mat-spinner>\r\n    </div>\r\n</div>\r\n<div class=\"container\" *ngIf=\"!loading\">\r\n\r\n    <div style=\"text-align: right;\">\r\n        <button mat-mini-fab color=\"accent\" [routerLink]=\"['/category/0']\">\r\n            <mat-icon>add</mat-icon>\r\n        </button>\r\n    </div>\r\n    <br>\r\n    <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\r\n\r\n\r\n        <!-- Name Column -->\r\n        <ng-container matColumnDef=\"name\">\r\n            <th mat-header-cell *matHeaderCellDef> Nombre </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\r\n        </ng-container>\r\n\r\n        <!-- Color Column -->\r\n        <ng-container matColumnDef=\"color\">\r\n            <th mat-header-cell *matHeaderCellDef> Color </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                <mat-card style=\"background-color:  {{element.color}};\"></mat-card>\r\n            </td>\r\n        </ng-container>\r\n\r\n        <!-- Options Column -->\r\n        <ng-container matColumnDef=\"options\">\r\n            <th mat-header-cell *matHeaderCellDef> Opciones </th>\r\n            <td mat-cell *matCellDef=\"let element\"><button mat-raised-button color=\"primary\"\r\n                    [routerLink]=\"['/category/'+element.id]\">Modificar</button></td>\r\n        </ng-container>\r\n\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n    </table>\r\n\r\n</div>","import { Route } from '@angular/compiler/src/core';\r\nimport { Component, OnInit, DoCheck } from '@angular/core';\r\nimport { FormControl, FormsModule } from '@angular/forms';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { from } from 'rxjs';\r\nimport { Subscription } from 'rxjs';\r\nimport { Apollo } from 'apollo-angular';\r\nimport gql from 'graphql-tag';\r\nimport { User } from 'src/app/models/user.model';\r\nimport { UserService } from '../../services/user.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nconst USER_REGISTER = gql`\r\n  mutation CreateUser(\r\n    $username: String!\r\n    $password: String!\r\n    $firstName: String!\r\n    $lastName: String!\r\n  ) {\r\n    createUser(\r\n      username: $username\r\n      password: $password\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n    ) {\r\n      user {\r\n        id\r\n        username\r\n        lastName\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst USER_LOGIN = gql`\r\n  mutation TokenAuth($username: String!, $password: String!) {\r\n    tokenAuth(username: $username, password: $password) {\r\n      token\r\n    }\r\n  }\r\n`;\r\n\r\nconst GET_USER_DATA = gql`\r\n  query {\r\n    me {\r\n      id\r\n      username\r\n      lastName\r\n      email\r\n      isStaff\r\n    }\r\n  }\r\n`;\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css'],\r\n})\r\nexport class RegisterComponent implements OnInit, DoCheck {\r\n  public cargando: boolean | undefined;\r\n  public isValid: boolean | undefined;\r\n  public status: string | undefined;\r\n  public identity: string | undefined;\r\n  public user: User = new User();\r\n  public token: string | undefined;\r\n  public firstFormGroup: FormGroup | undefined;\r\n  private querySubscription: Subscription | undefined;\r\n\r\n  constructor(\r\n    private _userService: UserService,\r\n    private apollo: Apollo,\r\n    private _route: ActivatedRoute,\r\n    private _router: Router\r\n  ) {\r\n    this.cargando = false;\r\n    this.isValid = false;\r\n    this.user.name = '';\r\n    this.user.username = '';\r\n    this.user.surname = '';\r\n    this.user.password = '';\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  ngDoCheck() {    \r\n    if (\r\n      this.user.name != '' &&\r\n      this.user.surname != '' &&\r\n      this.user.password != '' &&\r\n      this.user.username != ''\r\n    ) {\r\n      this.isValid = true;\r\n    } else {\r\n      this.isValid = false;\r\n    }\r\n  }\r\n\r\n  Register() {\r\n    this.cargando = true;\r\n    console.log(this.user);\r\n\r\n    this.cargando = true;\r\n    this.apollo\r\n      .mutate({\r\n        mutation: USER_REGISTER,\r\n        variables: {\r\n          username: this.user.username,\r\n          password: this.user.password,\r\n          firstName: this.user.name,\r\n          lastName: this.user.surname,\r\n        },\r\n      })\r\n      .subscribe(\r\n        (response: any) => {\r\n          console.log('got data', response);        \r\n          this.LogIn(this.user);\r\n        },\r\n        (error) => {\r\n          console.log('there was an error sending the query', error);\r\n          this.cargando = false;\r\n          this.status = 'error';\r\n        }\r\n      );\r\n  }\r\n\r\n  LogIn(newUser: any) {\r\n    this.cargando = true;\r\n    this.apollo\r\n      .mutate({\r\n        mutation: USER_LOGIN,\r\n        variables: {\r\n          username: newUser.username,\r\n          password: newUser.password,\r\n        },\r\n      })\r\n      .subscribe(\r\n        (response: any) => {\r\n          console.log('got data', response);\r\n          let token = response.data.tokenAuth.token;\r\n          localStorage.setItem('token', token);\r\n          this.getUserData(token);\r\n        },\r\n        (error) => {\r\n          console.log('there was an error sending the query', error);\r\n          this.cargando = false;\r\n          this.status = 'error';\r\n        }\r\n      );\r\n  }\r\n\r\n  getUserData(_token: string) {\r\n    this.querySubscription = this.apollo\r\n      .watchQuery<any>({\r\n        query: GET_USER_DATA,\r\n      })\r\n      .valueChanges.subscribe(\r\n        (response: any) => {\r\n          console.log(response);\r\n          var user = response.data.me;\r\n          localStorage.setItem('userLogged', JSON.stringify(user));\r\n          this.cargando = false;\r\n          this.status = 'success';\r\n          this._router.navigate(['/movies']);\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  }\r\n}\r\n","<br />\r\n<br />\r\n<br />\r\n<br />\r\n<br />\r\n<div style=\"background-color: #2b2e4a; height: 100%\">\r\n  <div class=\"container center-align\">\r\n    <br />\r\n    <div class=\"row outsidecont\" style=\"background-color: #53354a\">\r\n      <br />\r\n      <br />\r\n      <div class=\"input-field col s1\"></div>\r\n      <div class=\"col s10 white insidecont\">\r\n        <br />\r\n        <br />\r\n        <div class=\"row\">\r\n          <div class=\"row margin\">\r\n            <div class=\"col s12 m12 l12 center\">\r\n              <img\r\n                src=\"../../assets/register.svg\"\r\n                alt=\"\"              \r\n                style=\"width: 20%\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <h1 style=\"font-size: 35px\">Registro de usuario</h1>\r\n          <div class=\"row\">\r\n            <div class=\"input-field col s5 offset-s1\">\r\n              <input\r\n                id=\"nombre\"\r\n                name=\"nombre\"\r\n                type=\"text\"\r\n                class=\"validate\"\r\n                required\r\n                pattern=\"^[a-zA-ZÀ-ÿ\\u00f1\\u00d1]+(\\s*[a-zA-ZÀ-ÿ\\u00f1\\u00d1]*)*[a-zA-ZÀ-ÿ\\u00f1\\u00d1]+$\"\r\n                [(ngModel)]=\"user.name\"\r\n              />\r\n              <label for=\"nombre\">Nombre</label>\r\n            </div>\r\n            <div class=\"input-field col s5\">\r\n              <input\r\n                id=\"apellido\"\r\n                name=\"apellido\"\r\n                type=\"text\"\r\n                class=\"validate\"\r\n                required\r\n                pattern=\"^[a-zA-ZÀ-ÿ\\u00f1\\u00d1]+(\\s*[a-zA-ZÀ-ÿ\\u00f1\\u00d1]*)*[a-zA-ZÀ-ÿ\\u00f1\\u00d1]+$\"\r\n                [(ngModel)]=\"user.surname\"\r\n              />\r\n              <label for=\"apellido\">Apellido</label>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"input-field col s5 offset-s1\">\r\n              <input\r\n                id=\"nombreUsuario\"\r\n                name=\"nombre\"\r\n                type=\"text\"\r\n                class=\"validate\"\r\n                required\r\n                pattern=\"[a-zA-Z]{5,12}\"\r\n                [(ngModel)]=\"user.username\"\r\n              />\r\n              <label for=\"nombreUsuario\">Nombre de Usuario</label>\r\n            </div>          \r\n          <div class=\"input-field col s5 \">\r\n            <input\r\n              id=\"password\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              [(ngModel)]=\"user.password\"\r\n              autocomplete=\"on\"\r\n              required\r\n            />\r\n            <label for=\"password\">Contraseña</label>\r\n          </div>\r\n        </div>\r\n      \r\n        <div class=\"row\" *ngIf=\"cargando\">\r\n          <div class=\"col s12 center\">\r\n            <mat-spinner style=\"margin: 0 auto\"></mat-spinner>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\" *ngIf=\"!cargando\">\r\n          <div class=\"col s12\">\r\n            <div class=\"alert alert-success\" *ngIf=\"status == 'success'\">\r\n              <h1>Te Haz registrado correctamente</h1>              \r\n            </div>\r\n            <div class=\"alert alert-danger\" *ngIf=\"status == 'error'\">\r\n              <h1 style=\"color: red\">\r\n                Intentalo de nuevo, nombre de user o contraseña incorrectos\r\n              </h1>\r\n            </div>\r\n            <button\r\n              *ngIf=\"!isValid\"\r\n              class=\"btn-large waves-effect\"\r\n              style=\"background-color: #e84545\"\r\n              type=\"submit\"\r\n              name=\"action\"\r\n              (click)=\"Register()\"\r\n              disabled=\"true\"\r\n            >\r\n              Registrar\r\n              <i class=\"material-icons right\">send</i>\r\n            </button>\r\n            <button\r\n            *ngIf=\"isValid\"\r\n            class=\"btn-large waves-effect\"\r\n            style=\"background-color: #e84545\"\r\n            type=\"submit\"\r\n            name=\"action\"\r\n            (click)=\"Register()\"            \r\n          >\r\n            Registrar\r\n            <i class=\"material-icons right\">send</i>\r\n          </button>\r\n          </div>\r\n        </div>\r\n        <div class=\"input-field col s1\"></div>\r\n      </div>                 \r\n    </div>  \r\n    <div class=\"row\">\r\n      <br>            \r\n    </div>  \r\n    <div class=\"row\">\r\n      <br>            \r\n    </div>     \r\n  </div>    \r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { MatTableModule } from '@angular/material/table'\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { GraphQLModule } from './graphql.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { CategoriaComponent } from './components/categoria/categoria.component';\r\nimport { MovieComponent } from './components/movie/movie.component';\r\nimport { CreatedMovieComponent } from './components/movie/created-movie/created-movie.component';\r\nimport { ListReviewComponent } from './components/review/list-review/list-review.component';\r\nimport { AddReviewComponent } from './components/review/add-review/add-review.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { CreateCategoryComponent } from './components/categoria/create-category/create-category.component';\r\nimport { MAT_COLOR_FORMATS, NgxMatColorPickerModule, NGX_MAT_COLOR_FORMATS } from '@angular-material-components/color-picker';\r\nimport { ItemReviewComponent } from './components/review/item-review/item-review.component';\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    CategoriaComponent,\r\n    MovieComponent,\r\n    CreatedMovieComponent,\r\n    ListReviewComponent,\r\n    AddReviewComponent,\r\n    CreateCategoryComponent,\r\n    ItemReviewComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatProgressSpinnerModule,\r\n    FormsModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatExpansionModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatPaginatorModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatSlideToggleModule,\r\n    MatSliderModule,\r\n    MatStepperModule,\r\n    MatTableModule,\r\n    GraphQLModule,\r\n    HttpClientModule,\r\n    NgxMatColorPickerModule,\r\n    BrowserModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  providers: [{ provide: MAT_COLOR_FORMATS, useValue: NGX_MAT_COLOR_FORMATS }],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","export class CreateReview {\r\n    id: number | undefined;\r\n    comment: string | undefined;\r\n    ranking: number | undefined;\r\n    createdAt: string | undefined;\r\n    updatedAt: string | undefined;\r\n    user: number | undefined;\r\n    movie: number | undefined;\r\n}\r\n\r\nexport class Review {\r\n    id: number | undefined;\r\n    comment: string = '';\r\n    ranking: number = 0;\r\n    createdAt: string | undefined;\r\n    updatedAt: string | undefined;\r\n    user: User | undefined;\r\n    movie: Movie | undefined;\r\n}\r\n\r\nexport class User {\r\n    id: number | undefined;\r\n    username: string | undefined;\r\n    name: string | undefined;\r\n    surname: string | undefined;\r\n    password: string | undefined;\r\n    role: number | undefined;\r\n    createdAt: string | undefined;\r\n    updatedAt: string | undefined;\r\n}\r\n\r\nexport class Movie {\r\n    id: number | undefined;\r\n    pk: number | undefined;\r\n    poster: string | undefined;\r\n    movieName: string | undefined;\r\n    description: string | undefined;    \r\n    createdAt: string | undefined;\r\n    updatedAt: string | undefined;\r\n}\r\n\r\n\r\nexport class Dialog{\r\n    tipo: boolean | undefined;\r\n    accion: string | undefined;\r\n    button: string | undefined;\r\n    departamento: string | undefined;\r\n    municipio: string | undefined;\r\n    descripcion: string | undefined;\r\n}","export class Category {\r\n    id: number | undefined;\r\n    name: string | undefined;\r\n    color: string | undefined;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs'\r\nimport { Apollo } from 'apollo-angular';\r\nimport gql from 'graphql-tag';\r\nimport { Movie } from '../../models/movie.model'\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\n\r\nimport { Category } from '../../models/category.model'\r\nconst categoryQuery = gql`\r\nquery {\r\n  allMovies {\r\n  edges{\r\n    node{\r\n      id,\r\n      pk,\r\n      poster,\r\n      movieName,\r\n      description,\r\n      category{\r\n        id,\r\n        name,\r\n        color,\r\n        createdAt,\r\n        updatedAt\r\n      },\r\n      createdAt,\r\n      updatedAt\r\n    }\r\n    }\r\n  }\r\n  }\r\n`;\r\nconst categoriesQuery = gql`\r\n  query {\r\n    categories {\r\n      id\r\n      name\r\n      color\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n@Component({\r\n  selector: 'app-movie',\r\n  templateUrl: './movie.component.html',\r\n  styleUrls: ['./movie.component.css']\r\n})\r\nexport class MovieComponent implements OnInit {\r\n  loading: boolean = true\r\n  buttons: boolean = false\r\n  isAdmin: boolean = false\r\n  dataSource: Movie[] = []\r\n  dataSourceTemp: Movie[] = []\r\n  categories: Category[] = []\r\n  private querySubscription: Subscription | undefined;\r\n\r\n  constructor(\r\n    private apollo: Apollo,\r\n    private _router: Router,\r\n    private _route: ActivatedRoute\r\n  ) {\r\n    this.dataSource = []\r\n  }\r\n\r\n  ngDoCheck() {\r\n    let identity: any\r\n    identity = localStorage.getItem('userLogged')\r\n    if (identity === null) {\r\n      this.buttons = false\r\n    } else {\r\n      this.buttons = true\r\n      identity = JSON.parse(identity)\r\n      console.log(identity)\r\n      if (identity.isStaff) {\r\n        console.log(\"es admin el perro\")\r\n        this.isAdmin = true\r\n      } else {\r\n        this.isAdmin = false\r\n        console.log(\"no es admin wacala\")\r\n      }\r\n    }\r\n  }\r\n\r\n  catogoryFilter(categoryId: number | undefined) {\r\n    if (categoryId == 0)\r\n      this.dataSource = this.dataSourceTemp\r\n    else {\r\n      this.dataSource = this.dataSourceTemp.filter(x => {\r\n        if (x.node.category.id == categoryId) {\r\n          return x\r\n        }\r\n        else {\r\n          return\r\n        }\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n\r\n  actualizar(id: number) {\r\n    //la ruta de resena\r\n    this._router.navigate(['movies/create/' + id])\r\n  }\r\n  ngOnInit(): void {\r\n    console.log(\"DEspues de actualizar o crear\")\r\n   \r\n    this.querySubscription = this.apollo.watchQuery<any>({\r\n      query: categoryQuery\r\n    })\r\n      .valueChanges\r\n      .subscribe((response: any) => {\r\n        this.dataSource = response.data.allMovies.edges;\r\n        this.dataSourceTemp = this.dataSource\r\n        console.log(this.dataSource)\r\n      });\r\n\r\n    this.querySubscription = this.apollo.watchQuery<any>({\r\n      query: categoriesQuery\r\n    })\r\n      .valueChanges\r\n      .subscribe(({ data }) => {\r\n        this.categories = data.categories;\r\n        this.loading = false\r\n      });\r\n      \r\n  }\r\n\r\n  watchReviews(id:number){\r\n    let datuser:any\r\n    datuser = localStorage.getItem(\"userLogged\");\r\n    datuser = JSON.parse(datuser)\r\n    if(datuser != null){\r\n      this._router.navigate(['/list-review/' + id])\r\n    }\r\n    else{\r\n      this._router.navigate(['/login'])\r\n    }\r\n  }\r\n\r\n}\r\n","<br>\r\n<br>\r\n<br>\r\n<br>\r\n<br>\r\n\r\n<div>\r\n  <div class=\"row\" *ngIf=\"loading\">\r\n    <div class=\"col s12 center\">\r\n      <mat-spinner style=\"margin-left: 47%;\"></mat-spinner>\r\n    </div>\r\n  </div>\r\n  <br>\r\n  <div *ngIf=\"!loading\">\r\n    <div class=\"container center-align\">\r\n      <h1 style=\"font-size: 35px; color: #ffffff;\">PELICULAS</h1>\r\n      <h1 *ngIf=\"isAdmin\" style=\"font-size: 20px; color: #e6acee;\">Agregar nueva pelicula</h1>\r\n      <button *ngIf=\"isAdmin\" mat-fab color=\"primary\" [routerLink]=\"['/movies/create/0']\" aria-label=\"Agregar nueva pelicula\">\r\n        <mat-icon>plus_one</mat-icon>\r\n      </button>\r\n\r\n      <br>\r\n      <br>\r\n    </div>\r\n    <div class=\"row center\">\r\n      <div class=\"col col s6 m4 l2\">\r\n        <button mat-raised-button (click)=\"catogoryFilter(0)\" style=\"margin-bottom:20px; font-size: large; background-color: #e84545;\" class=\"new badge\"\r\n          data-badge-caption=\"\">Todas las peliculas</button>\r\n      </div>\r\n      <div *ngFor=\"let c of categories\" class=\"col col s6 m4 l2\">\r\n        <button mat-raised-button (click)=\"catogoryFilter(c.id)\" style=\"margin-bottom:20px; font-size: large; background-color: {{c.color}};\" class=\"new badge\"\r\n          data-badge-caption=\"\">{{c.name}}</button>\r\n      </div>\r\n    </div>\r\n    <br>\r\n    <div style=\"margin-left: 25px; margin-right: 25px;\">\r\n      <div class=\"row\">\r\n        <div class=\"col s6 m4 l2\" *ngFor=\"let card of dataSource\">\r\n          <mat-card style=\"height: 450px; width: 180px;\">\r\n\r\n            <img mat-card-image src=\"{{card.node.poster}}\">\r\n            <mat-card-title>\r\n              {{card.node.movieName}}\r\n            </mat-card-title>\r\n            <mat-card-subtitle>\r\n              <span (click)=\"catogoryFilter(card.node.category.id)\"\r\n                style=\"background-color: {{card.node.category.color}};\" class=\"new badge\"\r\n                data-badge-caption=\"\">{{card.node.category.name}}</span>\r\n            </mat-card-subtitle>\r\n            <br>\r\n            <mat-card-content class=\"overflow\">\r\n              <h5>{{card.node.description}}</h5>\r\n            </mat-card-content>\r\n            <mat-card-actions>\r\n              <button mat-raised-button color=\"primary\" (click)=\"watchReviews(card.node.pk)\">Reseña</button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n              <button *ngIf=\"isAdmin\" mat-mini-fab color=\"accent\" (click)=\"actualizar(card.node.pk)\">\r\n                <mat-icon>edit</mat-icon>\r\n              </button>\r\n            </mat-card-actions>\r\n\r\n          </mat-card>\r\n          <br>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n</div>","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  constructor() { }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { CategoriaComponent } from './components/categoria/categoria.component'\r\nimport { MovieComponent } from './components/movie/movie.component'\r\nimport { CreatedMovieComponent } from './components/movie/created-movie/created-movie.component'\r\nimport { ListReviewComponent } from './components/review/list-review/list-review.component'\r\nimport { CreateCategoryComponent } from './components/categoria/create-category/create-category.component'\r\n\r\nconst routes: Routes = [\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'register', component: RegisterComponent },\r\n  { path: 'category', component: CategoriaComponent },\r\n  { path: '', component: MovieComponent },\r\n  { path: 'movies', component: MovieComponent },\r\n  { path: 'movies/create/:id', component: CreatedMovieComponent },\r\n  { path: 'list-review/:id', component: ListReviewComponent },\r\n  { path: 'category/:id', component: CreateCategoryComponent }\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {\r\n    scrollPositionRestoration: 'enabled'\r\n  })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Dialog } from '../../../models/review.model'\r\n\r\n@Component({\r\n  selector: 'app-add-review',\r\n  templateUrl: './add-review.component.html',\r\n  styleUrls: ['./add-review.component.css']\r\n})\r\nexport class AddReviewComponent implements OnInit {\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<AddReviewComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: Dialog\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  clickNo(): void {\r\n    this.dialogRef.close()\r\n  }\r\n\r\n}\r\n","<div>\r\n    <div mat-dialog-content>\r\n        <h1><b>{{data.accion}}</b></h1>\r\n        <div class=\"row\">\r\n            <div class=\"input-field col s12\">\r\n                <label for=\"nombreBolsa\" class=\"active\">Departamento</label>\r\n                <input id=\"nombreBolsa\" placeholder=\"Ingrese nombre del departamento\" type=\"text\" [(ngModel)]=\"data.municipio\">\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div mat-dialog-actions class=\"row center\">\r\n        <button mat-button (click)=\"clickNo()\" style=\"margin-left: 4%; background-color: white; color: red;\r\n        border: 3px solid red;\">Cerrar</button>\r\n        <button mat-button cdkFocusInitial [mat-dialog-close]=\"data\" style=\"margin-left: 4%; background-color: white; color: #436f8a;\r\n        border: 3px solid #436f8a;\">{{data.button}}</button>\r\n    </div>\r\n</div>","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}